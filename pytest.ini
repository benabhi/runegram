[pytest]
# Configuración de Pytest para Runegram MUD

# Directorio donde pytest buscará los tests
testpaths = tests

# Patrón de archivos de test
python_files = test_*.py

# Patrón de clases de test
python_classes = Test*

# Patrón de funciones de test
python_functions = test_*

# Opciones por defecto al ejecutar pytest
addopts =
    # Mostrar output verboso
    -v
    # Mostrar resumen de todos los tipos de resultados
    -ra
    # Mostrar el porcentaje de cobertura
    --cov=src
    # Generar reporte HTML de cobertura
    --cov-report=html
    # Generar reporte de cobertura en terminal
    --cov-report=term-missing
    # Mostrar warnings
    -W default
    # Modo async estricto para pytest-asyncio
    --asyncio-mode=auto

# Markers personalizados
markers =
    critical: Tests críticos que deben pasar siempre (corren primero)
    slow: Tests que tardan más de 1 segundo (pueden saltarse con -m "not slow")
    integration: Tests de integración que requieren múltiples componentes

# Configuración de cobertura
[coverage:run]
source = src
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*

[coverage:report]
# Fallar si la cobertura es menor a este porcentaje
# fail_under = 70

# Excluir líneas de cobertura
exclude_lines =
    # Excluir código defensivo estándar
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
