# commands/admin/movement.py
"""
M√≥dulo de Comandos Administrativos para el Movimiento.

Este archivo contiene comandos que otorgan a los administradores capacidades
de movimiento especiales, que no est√°n sujetas a las reglas normales del juego
(como las salidas definidas en una sala).

Son herramientas esenciales para la construcci√≥n, supervisi√≥n y depuraci√≥n del mundo.
"""

import logging
from aiogram import types
from sqlalchemy.ext.asyncio import AsyncSession

from commands.command import Command
from src.models.character import Character
from src.services import player_service
from src.utils.presenters import show_current_room

class CmdTeleport(Command):
    """
    Comando para teletransportar al administrador a cualquier sala del juego
    especificando su ID num√©rico.
    """
    names = ["teleport", "tp"]
    lock = "rol(ADMINISTRADOR)"
    description = "Teletransp√≥rtate a cualquier sala usando su ID."

    async def execute(self, character: Character, session: AsyncSession, message: types.Message, args: list[str]):
        # 1. Validar la entrada del usuario.
        if not args:
            await message.answer("Uso: /teleport [ID_sala]")
            return

        try:
            # Intentamos convertir el primer argumento a un n√∫mero entero.
            to_room_id = int(args[0])
        except (ValueError, IndexError):
            # Falla si no hay argumentos o si el argumento no es un n√∫mero.
            await message.answer("El ID de la sala debe ser un n√∫mero v√°lido.")
            return

        try:
            # 2. Llamar al servicio que contiene la l√≥gica de negocio.
            await player_service.teleport_character(session, character.id, to_room_id)

            # 3. Notificar al administrador del √©xito y mostrar la nueva ubicaci√≥n.
            await message.answer(f"üöÄ Teletransportado a la sala {to_room_id}.")
            await show_current_room(message)

        except Exception as e:
            # Capturamos cualquier error que pueda ocurrir durante el teletransporte,
            # como un ID de sala que no existe (manejado por `player_service`).
            await message.answer(f"‚ùå Error al teletransportar: {e}")
            logging.warning(f"Fallo al ejecutar /teleport a la sala {args[0]}: {e}")

# Exportamos la lista de comandos de este m√≥dulo.
ADMIN_MOVEMENT_COMMANDS = [
    CmdTeleport(),
]